// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package MET

import "strconv"

type MeanElementTheory int8

const (
	/// Simplified General Perturbation Model 4
	meanElementTheorySGP4   MeanElementTheory = 0
	/// Simplified General Perturbation Model 4 eXtended Perturbations (https://amostech.com/TechnicalPapers/2022/Astrodynamics/Payne_2.pdf)
	meanElementTheorySGP4XP MeanElementTheory = 1
	/// Draper Semi-analytical Satellite Theory
	meanElementTheoryDSST   MeanElementTheory = 2
	/// Universal Semianalytical Method
	meanElementTheoryUSM    MeanElementTheory = 3
)

var EnumNamesmeanElementTheory = map[MeanElementTheory]string{
	meanElementTheorySGP4:   "SGP4",
	meanElementTheorySGP4XP: "SGP4XP",
	meanElementTheoryDSST:   "DSST",
	meanElementTheoryUSM:    "USM",
}

var EnumValuesmeanElementTheory = map[string]MeanElementTheory{
	"SGP4":   meanElementTheorySGP4,
	"SGP4XP": meanElementTheorySGP4XP,
	"DSST":   meanElementTheoryDSST,
	"USM":    meanElementTheoryUSM,
}

func (v MeanElementTheory) String() string {
	if s, ok := EnumNamesmeanElementTheory[v]; ok {
		return s
	}
	return "meanelementTheory(" + strconv.FormatInt(int64(v), 10) + ")"
}
